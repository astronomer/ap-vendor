version: 2.1
workflows:
  version: 2.1
  vendor-build:
    jobs:
      - run_pre_commit
{% for directory in directories %}
      - approve-{{ directory }}:
          type: approval
      - build:
          name: build-{{ directory }}
          directory: {{ directory }}
          requires:
            - approve-{{ directory }}
            - run_pre_commit
      - scan-trivy:
          name: scan-trivy-{{ directory }}
          directory: {{ directory }}
          requires:
            - build-{{ directory }}
      - release:
          name: release-{{ directory }}
          directory: {{ directory }}
          context:
            - quay.io
            - docker.io
          requires:
            - scan-trivy-{{ directory }}
          filters:
            branches:
              only: main
{% endfor %}
jobs:
  run_pre_commit:
    docker:
      - image: quay.io/astronomer/ci-pre-commit:2021-07
    steps:
      - checkout
      - run:
          name: Create pre-commit-cache-key.txt
          command: |
            cp .pre-commit-config.yaml /tmp/pre-commit-cache-key.txt
            python --version --version | sed 's/^/# /' >> /tmp/pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - pre-commit-cache-{{ '{{' }} checksum "/tmp/pre-commit-cache-key.txt" }}
      - run:
          name: Install pre-commit hooks
          command: pre-commit install-hooks
      - save_cache:
          key: pre-commit-cache-{{ '{{' }} checksum "/tmp/pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit
      - run:
          name: Run pre-commit
          command: pre-commit run --all-files --show-diff-on-failure
  build:
    executor: docker-executor
    description: Build an image
    parameters:
      directory:
        description: "The directory of the image to build"
        type: string
    steps:
      - docker-build:
          image_name: ap-<< parameters.directory >>
          dockerfile: Dockerfile
          path: << parameters.directory >>
  scan-trivy:
    docker:
      - image: docker:20.10.7-git
    description: "Trivy: Vulnerability scan a Docker image"
    parameters:
      directory:
        description: "The directory name of the image to be scanned"
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.6
          image: aquasec/trivy:latest
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/ap-<< parameters.directory >>.tar
      - run:
          name: Install trivy
          command: |
            apk add --update-cache --upgrade curl rpm bash
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin
            date +%F > date
      - restore_cache:
          keys:
            {% raw %}- trivy-cache-{{ checksum "date" }}{% endraw %}
      - run:
          name: Scan the local image with trivy
          command: bin/trivy-scan.sh "<< parameters.directory >>"
      - save_cache:
          {% raw %}key: trivy-cache-{{ checksum "date" }}{% endraw %}
          paths:
            - /tmp/workspace/trivy-cache
  release:
    executor: docker-executor
    parameters:
      directory:
        description: "The directory name of the image to be scanned"
        type: string
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.2
      - checkout
      - run:
          name: Validate semver tag
          command: |
            version="$(bin/check_version.py << parameters.directory >>)"
            echo "export TAG=${version}" >> $BASH_ENV
      - push-to-docker-hub:
          comma_separated_tags: "$TAG"
          image_name: ap-<< parameters.directory >>
      - push-to-quay-io:
          comma_separated_tags: "$TAG"
          image_name: ap-<< parameters.directory >>
executors:
  docker-executor:
    docker:
      - image: cimg/python:3.9
commands:
  docker-build:
    description: "Build a Docker image"
    parameters:
      dockerfile:
        type: string
        default: Dockerfile
      path:
        type: string
        default: "."
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.2
      - run:
          name: Build the Docker image
          command: bin/docker-build.sh << parameters.path>> << parameters.image_name >>
      - persist_to_workspace:
          root: .
          paths:
            - "./*.tar"
  push-to-quay-io:
    description: "Push a Docker image to Quay.io"
    parameters:
      comma_separated_tags:
        type: string
        default: $CIRCLE_BRANCH
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/<< parameters.image_name >>.tar
      - run:
          name: Login to Quay.io
          command: echo "$QUAY_PASSWORD" | docker login --username "$QUAY_USERNAME" --password-stdin quay.io
      - run:
          name: Push Docker image(s)
          command: bin/docker-push.sh "astronomer" "<< parameters.image_name >>" "<< parameters.comma_separated_tags >>" quay.io
  push-to-docker-hub:
    description: "Push a Docker image to DockerHub"
    parameters:
      comma_separated_tags:
        type: string
        default: $CIRCLE_BRANCH
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/<< parameters.image_name >>.tar
      - run:
          name: Login to DockerHub
          command: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin docker.io
      - run:
          name: Push Docker image(s)
          command: bin/docker-push.sh "astronomerinc" "<< parameters.image_name >>" "<< parameters.comma_separated_tags >>" docker.io
